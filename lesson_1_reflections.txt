How did viewing a diff between two versions of a file help you see the bug that was introduced?

Using diff is a much more efficient method of code comparison that going through a file manually.
It identifies lines where there are differences between two files.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You could save changes and revert back later if the program breaks.
You can also keep track of changes by other team members.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

You could forget to make a commit when it would be suitable.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git will typically be used in projects with many files, like a programming project.
Google docs will be used for standalone documents, like word docs.


How can you use the commands git log and git diff to view the history of files?

Git log displays all previous commits for the repository.
Git diff allows you to compare two different commits.


How might using version control make you more confident to make changes that could break something?

You can always revert back to the working version


Now that you have your workspace set up, what do you want to try using Git for?

I want to use git to have a strong foundation for learning Python and other languages.